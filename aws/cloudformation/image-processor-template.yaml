AWSTemplateFormatVersion: '2010-09-09'
Description: 'Infrastructure for distributed image processing task scheduler'

Parameters:
  handler:
      Default: lambdas.UserService::handleRequest
      Type: String
  MetaDataDBUsername:
    Description: "Username for the image and user metadata database admin account"
    Type: String
    MinLength: 1
  MetaDataDBPassword:
    Description: "Password for the image and user metadata database admin account"
    Type: String
    NoEcho: true
    MinLength: 8
  TestIPAddress:
    Description: "Local IP address to allow access of DB for manual testing"
    Type: String

Resources:
  UserServiceLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: UserService-lambda-role
      AssumeRolePolicyDocument:
        Statement:
          - Action:
            - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
              - lambda.amazonaws.com
        Version: 2012-10-17
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSLambdaExecute
      Policies:
        - PolicyName: UserServiceLambdaRDSAccessPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - rds-db:connect
                Resource: !Sub
                  - "arn:aws:rds-db:${AWS::Region}:${AWS::AccountId}:dbuser:${DbiResourceId}/db_user"
                  - DbiResourceId: !GetAtt MetaDataDB.DbiResourceId
      Path: "/"

  UserServiceLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: UserService
      Description: Lambda for handling user creation
      Handler: !Sub '${handler}'
      Role: !GetAtt UserServiceLambdaRole.Arn 
      Runtime: java17  
      Code: ../image-processor-lambdas/target/processor-lambda-1.0-SNAPSHOT.jar

  MetaDataDBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: 'Security group for MetaDataDB'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: !Ref TestIPAddress

  MetaDataDB:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: 20
      DBInstanceClass: db.t3.micro
      Engine: mysql
      EngineVersion: 8.0
      MasterUsername: !Ref MetaDataDBUsername
      MasterUserPassword: !Ref MetaDataDBPassword
      DBName: MetaDataDB
      PubliclyAccessible: true
      StorageType: gp2
      EnableIAMDatabaseAuthentication: true
      VPCSecurityGroups:
        - !GetAtt MetaDataDBSecurityGroup.GroupId
